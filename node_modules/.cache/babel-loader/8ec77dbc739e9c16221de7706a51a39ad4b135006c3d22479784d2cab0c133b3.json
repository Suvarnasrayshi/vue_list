{"ast":null,"code":"import { withAsyncContext as _withAsyncContext } from 'vue';\nimport { ref } from 'vue';\nexport default {\n  __name: 'TodoForm',\n  props: {\n    userId: Number\n  },\n  async setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let __temp, __restore;\n    const props = __props;\n    const title = ref('');\n    const completed = ref(false);\n\n    // const submitTodo = async () => {\n    const newTodo = {\n      title: title.value,\n      completed: completed.value,\n      userId: props.userId\n    };\n    const response = ([__temp, __restore] = _withAsyncContext(() => fetch('https://jsonplaceholder.typicode.com/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTodo)\n    })), __temp = await __temp, __restore(), __temp);\n    const result = ([__temp, __restore] = _withAsyncContext(() => response.json()), __temp = await __temp, __restore(), __temp);\n    console.log('Created Todo:', result);\n    title.value = '';\n    completed.value = false;\n    // };\n\n    const __returned__ = {\n      props,\n      title,\n      completed,\n      newTodo,\n      response,\n      result,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","props","__props","title","completed","newTodo","value","userId","response","__temp","__restore","_withAsyncContext","fetch","method","headers","body","JSON","stringify","result","json","console","log"],"sources":["/home/suvarna-sinha/Documents/gitvue/vue_list/src/components/TodoForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Add New Todo</h2>\n    <form>\n      <div>\n        <label for=\"title\">Title:</label>\n        <input type=\"text\" v-model=\"title\" id=\"title\" required />\n      </div>\n      <div>\n        <label for=\"completed\">Completed:</label>\n        <input type=\"checkbox\" v-model=\"completed\" id=\"completed\" />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps } from 'vue';\n\nconst props = defineProps({\n  userId: Number,\n});\n\nconst title = ref('');\nconst completed = ref(false);\n\n// const submitTodo = async () => {\n  const newTodo = {\n    title: title.value,\n    completed: completed.value,\n    userId: props.userId,\n  };\n\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newTodo),\n  });\n\n  const result = await response.json();\n  console.log('Created Todo:', result);\n  title.value = '';\n  completed.value = false;\n// };\n</script>\n```"],"mappings":";AAmBA,SAASA,GAAgB,QAAQ,KAAK;;;;;;;;;;;IAEtC,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,SAAS,GAAGJ,GAAG,CAAC,KAAK,CAAC;;IAE5B;IACE,MAAMK,OAAO,GAAG;MACdF,KAAK,EAAEA,KAAK,CAACG,KAAK;MAClBF,SAAS,EAAEA,SAAS,CAACE,KAAK;MAC1BC,MAAM,EAAEN,KAAK,CAACM;IAChB,CAAC;IAED,MAAMC,QAAQ,IAAG,CAAAC,MAAA,EAAAC,SAAA,IAAAC,iBAAA,OAAMC,KAAK,CAAC,4CAA4C,EAAE;MACzEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO;IAC9B,CAAC,I,2CAAC;IAEF,MAAMa,MAAM,IAAG,CAAAT,MAAA,EAAAC,SAAA,IAAAC,iBAAA,OAAMH,QAAQ,CAACW,IAAI,CAAC,I,2CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,MAAM,CAAC;IACpCf,KAAK,CAACG,KAAK,GAAG,EAAE;IAChBF,SAAS,CAACE,KAAK,GAAG,KAAK;IACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}