{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.album, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, _toDisplayString(items.id), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","album","items","key","id"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/Albums.vue"],"sourcesContent":["<template>\n<ul>\n  <li v-for=\"items in album\" :key=\"items.id\">\n    {{ items.id }}\n  </li>\n</ul>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\n// import { useRouter } from \"vue-router\";\n\nconst album =ref([]);\n// const router = useRouter();\n\nonMounted(async()=>{\n  const response =await fetch('https://jsonplaceholder.typicode.com/albums')\n  album.value= await response.json();\n\n})\n</script>"],"mappings":";;uBACAA,mBAAA,CAIK,c,kBAHHA,mBAAA,CAEKC,SAAA,QAJPC,WAAA,CAEsBC,MAAA,CAAAC,KAAK,EAAdC,KAAK;yBAAhBL,mBAAA,CAEK;MAFuBM,GAAG,EAAED,KAAK,CAACE;wBAClCF,KAAK,CAACE,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}