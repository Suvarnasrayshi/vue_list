{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.album, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, [_createTextVNode(_toDisplayString(items.id) + \" \" + _toDisplayString(items.title) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.getphoto && _ctx.getphoto(...args))\n    })]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","album","items","key","id","_createTextVNode","_toDisplayString","title","_createElementVNode","onClick","_cache","args","_ctx","getphoto"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/Albums.vue"],"sourcesContent":["<template>\n<ul>\n  <li v-for=\"items in album\" :key=\"items.id\">\n    {{ items.id }} {{ items.title }}\n    <button @click=\"getphoto\"></button>\n  </li>\n</ul>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst album =ref([]);\nconst router = useRouter();\n\nonMounted(async()=>{\n  const response =await fetch('https://jsonplaceholder.typicode.com/albums')\n  album.value= await response.json();\n\n})\n</script>"],"mappings":";;uBACAA,mBAAA,CAKK,c,kBAJHA,mBAAA,CAGKC,SAAA,QALPC,WAAA,CAEsBC,MAAA,CAAAC,KAAK,EAAdC,KAAK;yBAAhBL,mBAAA,CAGK;MAHuBM,GAAG,EAAED,KAAK,CAACE;QAFzCC,gBAAA,CAAAC,gBAAA,CAGOJ,KAAK,CAACE,EAAE,IAAG,GAAC,GAAAE,gBAAA,CAAGJ,KAAK,CAACK,KAAK,IAAG,GAChC,iBAAAC,mBAAA,CAAmC;MAA1BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}