{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.photo, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, _toDisplayString(items.id) + \" \" + _toDisplayString(items.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","_ctx","photo","items","key","id","_toDisplayString","title"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/AlbumDetails.vue"],"sourcesContent":["<template>\n<ul>\n  <li v-for=\"items in photo\" :key=\"items.id\">\n    {{ items.id }}\n    {{\n        items.title\n       }}\n  </li>\n</ul>\n</template>\n\n<script>\nimport {\n  onMounted,\n  ref\n} from \"vue\";\nimport {\n  useRoute\n} from \"vue-router\";\n\nconst route = useRoute()\nconst albumId = route.params.albumId\nconsole.log(\"object\", albumId)\nconst photo = ref([]);\nonMounted(async () => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}/photos`);\n  photo.value = await response.json();\n  console.log(\"hfhfudhfrfgrdfgh\", photo.value);\n})\n</script>\n"],"mappings":";;uBACAA,mBAAA,CAOK,c,kBANHA,mBAAA,CAKKC,SAAA,QAPPC,WAAA,CAEsBC,IAAA,CAAAC,KAAK,EAAdC,KAAK;yBAAhBL,mBAAA,CAKK;MALuBM,GAAG,EAAED,KAAK,CAACE;wBAClCF,KAAK,CAACE,EAAE,IAAG,GACd,GAAAC,gBAAA,CACIH,KAAK,CAACI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}