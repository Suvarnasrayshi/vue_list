{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Todo\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"user-detail\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Post\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: $setup.funShow\n  }, \"Add New Post\"), $setup.showForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode($setup[\"TodoForm\"], {\n    userId: $setup.userId\n  }, null, 8 /* PROPS */, [\"userId\"])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.paginatedTodos, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: \"todo-item\"\n    }, [_createTextVNode(_toDisplayString(item.id) + \" \" + _toDisplayString(item.title) + \" - \", 1 /* TEXT */), _createElementVNode(\"strong\", {\n      style: _normalizeStyle({\n        color: item.completed ? '#28a745' : '#dc3545'\n      })\n    }, _toDisplayString(item.completed ? 'Completed' : 'Pending'), 5 /* TEXT, STYLE */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: $setup.nextTodoPage,\n    disabled: !$setup.hasMoreTodos,\n    class: \"lastpage\"\n  }, \"More Todos\", 8 /* PROPS */, _hoisted_4), _hoisted_5, _createElementVNode(\"button\", {\n    onClick: $setup.funShow\n  }, \"Add New Post\"), $setup.showForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode($setup[\"PostForm\"], {\n    userId: $setup.userId\n  }, null, 8 /* PROPS */, [\"userId\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.paginatedPosts, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(item.title), 1 /* TEXT */), _createTextVNode(\" ----- \" + _toDisplayString(item.id) + \" \" + _toDisplayString(item.body), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: $setup.nextPostPage,\n    disabled: !$setup.hasMorePosts,\n    class: \"lastpage\"\n  }, \"More Posts\", 8 /* PROPS */, _hoisted_7)]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$setup","funShow","showForm","_hoisted_3","_createVNode","userId","_createCommentVNode","_Fragment","_renderList","paginatedTodos","item","id","_createTextVNode","_toDisplayString","title","style","_normalizeStyle","color","completed","nextTodoPage","disabled","hasMoreTodos","_hoisted_4","_hoisted_5","_hoisted_6","paginatedPosts","body","nextPostPage","hasMorePosts","_hoisted_7"],"sources":["/home/suvarna-sinha/Documents/gitvue/vue_list/src/components/userDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Todo</h2>\n    <ul class=\"user-detail\">\n      <button @click=\"funShow\">Add New Post</button>\n      <div v-if=\"showForm\">\n        <TodoForm :userId=\"userId\" />\n      </div>\n      <li v-for=\"item in paginatedTodos\" :key=\"item.id\" class=\"todo-item\">\n        {{ item.id }} {{ item.title }} -\n        <strong :style=\"{ color: item.completed ? '#28a745' : '#dc3545' }\">\n          {{ item.completed ? 'Completed' : 'Pending' }}\n\n        </strong>\n      </li>\n    </ul>\n    <button @click=\"nextTodoPage\" :disabled=\"!hasMoreTodos\" class=\"lastpage\">More Todos</button>\n   \n    <h2>Post</h2>\n    <button @click=\"funShow\">Add New Post</button>\n    <div v-if=\"showForm\">\n      <PostForm :userId=\"userId\" />\n    </div>\n    <ul>\n      <li v-for=\"item in paginatedPosts\" :key=\"item.id\">\n        <strong>{{ item.title }}</strong> ----- {{ item.id }} {{ item.body }}\n      </li>\n    </ul>\n    <button @click=\"nextPostPage\" :disabled=\"!hasMorePosts\" class=\"lastpage\">More Posts</button>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport PostForm from \"./PostForm.vue\"\nimport TodoForm from \"./TodoForm.vue\"\nconst route = useRoute();\nconst userId = route.params.userId;\n\nconst todos = ref([]);\nconst posts = ref([]);\n\nconst todoPage = ref(0);\nconst postPage = ref(0);\nconst itemsPerPage = 5\n\nconst showForm = ref(false);\n\nonMounted(async () => {\n  const responseTodos = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`);\n  todos.value = await responseTodos.json();\nconsole.log(\"todo:  \",todos.value);\n  const responsePosts = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}/posts`);\n  posts.value = await responsePosts.json();\n});\n\nconst paginatedTodos = computed(() => {\n  const start = todoPage.value * itemsPerPage;\n  return todos.value.slice(start, start + itemsPerPage);\n});\n\nconst paginatedPosts = computed(() => {\n  const start = postPage.value * itemsPerPage;\n  return posts.value.slice(start, start + itemsPerPage);\n});\n\nconst hasMoreTodos = computed(() => {\n  return (todoPage.value + 1) * itemsPerPage < todos.value.length;\n});\n\nconst hasMorePosts = computed(() => {\n  return (postPage.value + 1) * itemsPerPage < posts.value.length;\n});\n\nconst nextTodoPage = () => {\n  if (hasMoreTodos.value) {\n    todoPage.value += 1;\n  }\n};\n\nconst nextPostPage = () => {\n  if (hasMorePosts.value) {\n    postPage.value += 1;\n  }\n};\n\nconst funShow = () => {\n  console.log(!showForm.value)\n  showForm.value = !showForm.value;\n};\n</script>\n\n\n"],"mappings":";gCAEIA,mBAAA,CAAa,YAAT,MAAI;;EACJC,KAAK,EAAC;AAAa;;EAH3BC,GAAA;AAAA;mBAAA;gCAkBIF,mBAAA,CAAa,YAAT,MAAI;;EAlBZE,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CA4BM,cA3BJC,UAAa,EACbJ,mBAAA,CAYK,MAZLK,UAYK,GAXHL,mBAAA,CAA8C;IAArCM,OAAK,EAAEC,MAAA,CAAAC;EAAO,GAAE,cAAY,GAC1BD,MAAA,CAAAE,QAAQ,I,cAAnBN,mBAAA,CAEM,OAPZO,UAAA,GAMQC,YAAA,CAA6BJ,MAAA;IAAlBK,MAAM,EAAEL,MAAA,CAAAK;EAAM,oC,KANjCC,mBAAA,iB,kBAQMV,mBAAA,CAMKW,SAAA,QAdXC,WAAA,CAQyBR,MAAA,CAAAS,cAAc,EAAtBC,IAAI;yBAAfd,mBAAA,CAMK;MAN+BD,GAAG,EAAEe,IAAI,CAACC,EAAE;MAAEjB,KAAK,EAAC;QAR9DkB,gBAAA,CAAAC,gBAAA,CASWH,IAAI,CAACC,EAAE,IAAG,GAAC,GAAAE,gBAAA,CAAGH,IAAI,CAACI,KAAK,IAAG,KAC9B,iBAAArB,mBAAA,CAGS;MAHAsB,KAAK,EAVtBC,eAAA;QAAAC,KAAA,EAUiCP,IAAI,CAACQ,SAAS;MAAA;wBAClCR,IAAI,CAACQ,SAAS,kD;oCAKvBzB,mBAAA,CAA4F;IAAnFM,OAAK,EAAEC,MAAA,CAAAmB,YAAY;IAAGC,QAAQ,GAAGpB,MAAA,CAAAqB,YAAY;IAAE3B,KAAK,EAAC;KAAW,YAAU,iBAhBvF4B,UAAA,GAkBIC,UAAa,EACb9B,mBAAA,CAA8C;IAArCM,OAAK,EAAEC,MAAA,CAAAC;EAAO,GAAE,cAAY,GAC1BD,MAAA,CAAAE,QAAQ,I,cAAnBN,mBAAA,CAEM,OAtBV4B,UAAA,GAqBMpB,YAAA,CAA6BJ,MAAA;IAAlBK,MAAM,EAAEL,MAAA,CAAAK;EAAM,oC,KArB/BC,mBAAA,gBAuBIb,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKW,SAAA,QA1BXC,WAAA,CAwByBR,MAAA,CAAAyB,cAAc,EAAtBf,IAAI;yBAAfd,mBAAA,CAEK;MAF+BD,GAAG,EAAEe,IAAI,CAACC;QAC5ClB,mBAAA,CAAiC,gBAAAoB,gBAAA,CAAtBH,IAAI,CAACI,KAAK,kBAzB7BF,gBAAA,CAyByC,SAAO,GAAAC,gBAAA,CAAGH,IAAI,CAACC,EAAE,IAAG,GAAC,GAAAE,gBAAA,CAAGH,IAAI,CAACgB,IAAI,iB;oCAGtEjC,mBAAA,CAA4F;IAAnFM,OAAK,EAAEC,MAAA,CAAA2B,YAAY;IAAGP,QAAQ,GAAGpB,MAAA,CAAA4B,YAAY;IAAElC,KAAK,EAAC;KAAW,YAAU,iBA5BvFmC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}