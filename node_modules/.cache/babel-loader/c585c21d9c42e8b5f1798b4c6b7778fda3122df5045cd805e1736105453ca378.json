{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add New Post\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"body\"\n}, \"Body:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Posts\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitPost, [\"prevent\"])\n  }, [_createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.title = $event),\n    id: \"title\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.body = $event),\n    id: \"body\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.body]])]), _hoisted_4], 32 /* NEED_HYDRATION */), _hoisted_5, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(post.title), 1 /* TEXT */), _createTextVNode(\" - \" + _toDisplayString(post.body), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","_hoisted_1","onSubmit","_withModifiers","$setup","submitPost","_hoisted_2","_cache","$event","title","id","required","_hoisted_3","body","_hoisted_4","_hoisted_5","_Fragment","_renderList","posts","post","key","_toDisplayString","_createTextVNode"],"sources":["/home/suvarna-sinha/Documents/gitvue/vue_list/src/components/PostForm.vue"],"sourcesContent":["<template>\n<div>\n  <h2>Add New Post</h2>\n  <form @submit.prevent=\"submitPost\">\n    <div>\n      <label for=\"title\">Title:</label>\n      <input type=\"text\" v-model=\"title\" id=\"title\" required />\n    </div>\n    <div>\n      <label for=\"body\">Body:</label>\n      <textarea v-model=\"body\" id=\"body\" required></textarea>\n    </div>\n    <button type=\"submit\">Submit</button>\n  </form>\n\n  <h2>Posts</h2>\n  <ul>\n    <li v-for=\"post in posts\" :key=\"post.id\">\n      <strong>{{ post.title }}</strong> - {{ post.body }}\n    </li>\n  </ul>\n</div>\n</template>\n\n <script setup>\n import { ref, defineProps, onMounted } from 'vue';\n\n const props = defineProps({\n   userId: Number,\n });\n\n const title = ref('');\n const body = ref('');\n const posts = ref([]);\n\n const submitPost = async () => {\n   const newPost = {\n     title: title.value,\n     body: body.value,\n     userId: props.userId,\n   };\n\n   const response = await fetch('https:jsonplaceholder.typicode.com/posts', {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n     },\n     body: JSON.stringify(newPost),\n   });\n\n   const result = await response.json();\n   console.log('Created Post:', result);\n\n\n   posts.value.push(result);\n\n\n   title.value = '';\n   body.value = '';\n };\n\n onMounted(async () => {\n   const response = await fetch(`https:jsonplaceholder.typicode.com/users/${props.userId}/posts`);\n   posts.value = await response.json();\n });\n </script>\n ```"],"mappings":";gCAEEA,mBAAA,CAAqB,YAAjB,cAAY;gCAGZA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;gCAIzBD,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gCAGzBD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;gCAG9BF,mBAAA,CAAc,YAAV,OAAK;;uBAdXG,mBAAA,CAoBM,cAnBJC,UAAqB,EACrBJ,mBAAA,CAUO;IAVAK,QAAM,EAHfC,cAAA,CAGyBC,MAAA,CAAAC,UAAU;MAC/BR,mBAAA,CAGM,cAFJS,UAAiC,E,gBACjCT,mBAAA,CAAyD;IAAlDE,IAAI,EAAC,MAAM;IANxB,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMkCJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IAAEE,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAlBP,MAAA,CAAAK,KAAK,E,KAEnCZ,mBAAA,CAGM,cAFJe,UAA+B,E,gBAC/Bf,mBAAA,CAAuD;IAV7D,uBAAAU,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUyBJ,MAAA,CAAAS,IAAI,GAAAL,MAAA;IAAEE,EAAE,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAhBP,MAAA,CAAAS,IAAI,E,KAEzBC,UAAqC,C,4BAGvCC,UAAc,EACdlB,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKgB,SAAA,QAnBTC,WAAA,CAiBuBb,MAAA,CAAAc,KAAK,EAAbC,IAAI;yBAAfnB,mBAAA,CAEK;MAFsBoB,GAAG,EAAED,IAAI,CAACT;QACnCb,mBAAA,CAAiC,gBAAAwB,gBAAA,CAAtBF,IAAI,CAACV,KAAK,kBAlB3Ba,gBAAA,CAkBuC,KAAG,GAAAD,gBAAA,CAAGF,IAAI,CAACN,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}