{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todo, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, _toDisplayString(items.id) + \" \" + _toDisplayString(items.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","todo","items","key","id","_toDisplayString","title"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/userDetails.vue"],"sourcesContent":["<template>\n  <ul>\n    <li v-for=\"items in todo\" :key=\"items.id\">\n      {{ items.id }}\n      {{ \n        items.title\n       }}\n    </li>\n  </ul>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nconst route = useRoute()\n// console.log(\"object\",route.params.userId);\nconst todo =ref([]);\nconst userId=route.params.userId;\nconsole.log(\"userid\",userId);\n\n\nonMounted(async()=>{\n  const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`);\n  todo.value = await response.json();\n  console.log('object',todo.value);\n})\n</script>\n<style scoped>\n\n</style>"],"mappings":";;uBACEA,mBAAA,CAOK,c,kBANHA,mBAAA,CAKKC,SAAA,QAPTC,WAAA,CAEwBC,MAAA,CAAAC,IAAI,EAAbC,KAAK;yBAAhBL,mBAAA,CAKK;MALsBM,GAAG,EAAED,KAAK,CAACE;wBACjCF,KAAK,CAACE,EAAE,IAAG,GACd,GAAAC,gBAAA,CACEH,KAAK,CAACI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}