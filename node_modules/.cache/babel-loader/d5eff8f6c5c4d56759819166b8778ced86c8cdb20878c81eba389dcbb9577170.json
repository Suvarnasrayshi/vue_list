{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Todo\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"user-detail\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Post\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  const _component_PostForm = _resolveComponent(\"PostForm\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.paginatedTodos, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: \"todo-item\"\n    }, [_createTextVNode(_toDisplayString(item.id) + \" \" + _toDisplayString(item.title) + \" - \", 1 /* TEXT */), _createElementVNode(\"strong\", {\n      style: _normalizeStyle({\n        color: item.completed ? '#28a745' : '#dc3545'\n      })\n    }, _toDisplayString(item.completed ? 'Completed' : 'Pending'), 5 /* TEXT, STYLE */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.nextTodoPage && _ctx.nextTodoPage(...args)),\n    disabled: !_ctx.hasMoreTodos,\n    class: \"lastpage\"\n  }, \"More Todos\", 8 /* PROPS */, _hoisted_3), _hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.funShow && _ctx.funShow(...args))\n  }, \"Add New Post\"), _ctx.showForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_PostForm, {\n    userId: _ctx.userId\n  }, null, 8 /* PROPS */, [\"userId\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.paginatedPosts, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(item.title), 1 /* TEXT */), _createTextVNode(\" ----- \" + _toDisplayString(item.id) + \" \" + _toDisplayString(item.body), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.nextPostPage && _ctx.nextPostPage(...args)),\n    disabled: !_ctx.hasMorePosts,\n    class: \"lastpage\"\n  }, \"More Posts\", 8 /* PROPS */, _hoisted_6)]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","paginatedTodos","item","id","_createTextVNode","_toDisplayString","title","style","_normalizeStyle","color","completed","onClick","_cache","args","nextTodoPage","disabled","hasMoreTodos","_hoisted_3","_hoisted_4","funShow","showForm","_hoisted_5","_createVNode","_component_PostForm","userId","_createCommentVNode","paginatedPosts","body","nextPostPage","hasMorePosts","_hoisted_6"],"sources":["/home/suvarna-sinha/Documents/gitvue/vue_list/src/components/userDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Todo</h2>\n    <ul class=\"user-detail\">\n      <li v-for=\"item in paginatedTodos\" :key=\"item.id\" class=\"todo-item\">\n        {{ item.id }} {{ item.title }} -\n        <strong :style=\"{ color: item.completed ? '#28a745' : '#dc3545' }\">\n          {{ item.completed ? 'Completed' : 'Pending' }}\n        </strong>\n      </li>\n    </ul>\n    <button @click=\"nextTodoPage\" :disabled=\"!hasMoreTodos\" class=\"lastpage\">More Todos</button>\n   \n    <h2>Post</h2>\n    <button @click=\"funShow\">Add New Post</button>\n    <div v-if=\"showForm\">\n      <PostForm :userId=\"userId\" />\n    </div>\n    <ul>\n      <li v-for=\"item in paginatedPosts\" :key=\"item.id\">\n        <strong>{{ item.title }}</strong> ----- {{ item.id }} {{ item.body }}\n      </li>\n    </ul>\n    <button @click=\"nextPostPage\" :disabled=\"!hasMorePosts\" class=\"lastpage\">More Posts</button>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport PostForm from \"./PostForm.vue\"\n\nconst route = useRoute();\nconst userId = route.params.userId;\n\nconst todos = ref([]);\nconst posts = ref([]);\n\nconst todoPage = ref(0);\nconst postPage = ref(0);\nconst itemsPerPage = 5\n\nconst showForm = ref(false);\n\nonMounted(async () => {\n  const responseTodos = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}/todos`);\n  todos.value = await responseTodos.json();\nconsole.log(\"todo:  \",todos.);\n  const responsePosts = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}/posts`);\n  posts.value = await responsePosts.json();\n});\n\nconst paginatedTodos = computed(() => {\n  const start = todoPage.value * itemsPerPage;\n  return todos.value.slice(start, start + itemsPerPage);\n});\n\nconst paginatedPosts = computed(() => {\n  const start = postPage.value * itemsPerPage;\n  return posts.value.slice(start, start + itemsPerPage);\n});\n\nconst hasMoreTodos = computed(() => {\n  return (todoPage.value + 1) * itemsPerPage < todos.value.length;\n});\n\nconst hasMorePosts = computed(() => {\n  return (postPage.value + 1) * itemsPerPage < posts.value.length;\n});\n\nconst nextTodoPage = () => {\n  if (hasMoreTodos.value) {\n    todoPage.value += 1;\n  }\n};\n\nconst nextPostPage = () => {\n  if (hasMorePosts.value) {\n    postPage.value += 1;\n  }\n};\n\nconst funShow = () => {\n  console.log(!showForm.value)\n  showForm.value = !showForm.value;\n};\n</script>\n\n\n"],"mappings":";gCAEIA,mBAAA,CAAa,YAAT,MAAI;;EACJC,KAAK,EAAC;AAAa;mBAH3B;gCAaID,mBAAA,CAAa,YAAT,MAAI;;EAbZE,GAAA;AAAA;mBAAA;;;uBACEC,mBAAA,CAuBM,cAtBJC,UAAa,EACbJ,mBAAA,CAOK,MAPLK,UAOK,I,kBANHF,mBAAA,CAKKG,SAAA,QATXC,WAAA,CAIyBC,IAAA,CAAAC,cAAc,EAAtBC,IAAI;yBAAfP,mBAAA,CAKK;MAL+BD,GAAG,EAAEQ,IAAI,CAACC,EAAE;MAAEV,KAAK,EAAC;QAJ9DW,gBAAA,CAAAC,gBAAA,CAKWH,IAAI,CAACC,EAAE,IAAG,GAAC,GAAAE,gBAAA,CAAGH,IAAI,CAACI,KAAK,IAAG,KAC9B,iBAAAd,mBAAA,CAES;MAFAe,KAAK,EANtBC,eAAA;QAAAC,KAAA,EAMiCP,IAAI,CAACQ,SAAS;MAAA;wBAClCR,IAAI,CAACQ,SAAS,kD;oCAIvBlB,mBAAA,CAA4F;IAAnFmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,IAAA,CAAAc,YAAA,IAAAd,IAAA,CAAAc,YAAA,IAAAD,IAAA,CAAY;IAAGE,QAAQ,GAAGf,IAAA,CAAAgB,YAAY;IAAEvB,KAAK,EAAC;KAAW,YAAU,iBAXvFwB,UAAA,GAaIC,UAAa,EACb1B,mBAAA,CAA8C;IAArCmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,IAAA,CAAAmB,OAAA,IAAAnB,IAAA,CAAAmB,OAAA,IAAAN,IAAA,CAAO;KAAE,cAAY,GAC1Bb,IAAA,CAAAoB,QAAQ,I,cAAnBzB,mBAAA,CAEM,OAjBV0B,UAAA,GAgBMC,YAAA,CAA6BC,mBAAA;IAAlBC,MAAM,EAAExB,IAAA,CAAAwB;EAAM,oC,KAhB/BC,mBAAA,gBAkBIjC,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKG,SAAA,QArBXC,WAAA,CAmByBC,IAAA,CAAA0B,cAAc,EAAtBxB,IAAI;yBAAfP,mBAAA,CAEK;MAF+BD,GAAG,EAAEQ,IAAI,CAACC;QAC5CX,mBAAA,CAAiC,gBAAAa,gBAAA,CAAtBH,IAAI,CAACI,KAAK,kBApB7BF,gBAAA,CAoByC,SAAO,GAAAC,gBAAA,CAAGH,IAAI,CAACC,EAAE,IAAG,GAAC,GAAAE,gBAAA,CAAGH,IAAI,CAACyB,IAAI,iB;oCAGtEnC,mBAAA,CAA4F;IAAnFmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,IAAA,CAAA4B,YAAA,IAAA5B,IAAA,CAAA4B,YAAA,IAAAf,IAAA,CAAY;IAAGE,QAAQ,GAAGf,IAAA,CAAA6B,YAAY;IAAEpC,KAAK,EAAC;KAAW,YAAU,iBAvBvFqC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}