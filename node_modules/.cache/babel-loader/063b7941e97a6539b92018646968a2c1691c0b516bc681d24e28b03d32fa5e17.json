{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.photo, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, _toDisplayString(items.id) + \" \" + _toDisplayString(), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","photo","items","key","id","_toDisplayString"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/AlbumDetails.vue"],"sourcesContent":["<template>\n  <ul>\n    <li v-for=\"items in photo\" :key=\"items.id\">\n      {{ items.id }}\n     {{  }}\n    </li>\n  </ul>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nconst route = useRoute()\nconst albumId= route.params.albumId\nconsole.log(\"object\",albumId)\nconst photo= ref([]);\nonMounted(async()=>{\n  const response = await fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}/photos`);\n  photo.value = await response.json();\n  console.log(\"hfhfudhfrfgrdfgh\",photo.value);\n})\n</script>"],"mappings":";;uBACEA,mBAAA,CAKK,c,kBAJHA,mBAAA,CAGKC,SAAA,QALTC,WAAA,CAEwBC,MAAA,CAAAC,KAAK,EAAdC,KAAK;yBAAhBL,mBAAA,CAGK;MAHuBM,GAAG,EAAED,KAAK,CAACE;wBAClCF,KAAK,CAACE,EAAE,IAAG,GACf,GAAAC,gBAAA,CAAI,CAAF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}