{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"photos\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todo, items => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: items.id\n    }, _toDisplayString(items.id) + \" \" + _toDisplayString(items.title), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_renderList","_ctx","todo","items","key","id","_toDisplayString","title"],"sources":["/home/suvarna-sinha/Documents/vue_todo/userdata/src/components/AlbumDetails.vue"],"sourcesContent":["<template>\n  <h1>photos</h1>\n  <ul>\n    <li v-for=\"items in todo\" :key=\"items.id\">\n      {{ items.id }}\n      {{ \n        items.title\n       }}\n    </li>\n  </ul>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nconst route = useRoute()\nconst albumId= route.params.albumId\nconsole.log(\"object\",albumId)\nconst photo= ref([]);\nonMounted(async()=>{\n  const response = await fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}/photos`);\n  photo.value = await response.json();\n  console.log(\"hfhfudhfrfgrdfgh\",photo.value);\n})\n</script>"],"mappings":";gCACEA,mBAAA,CAAe,YAAX,QAAM;;uBADZC,mBAAA,CAAAC,SAAA,SACEC,UAAe,EACfH,mBAAA,CAOK,c,kBANHC,mBAAA,CAKKC,SAAA,QARTE,WAAA,CAGwBC,IAAA,CAAAC,IAAI,EAAbC,KAAK;yBAAhBN,mBAAA,CAKK;MALsBO,GAAG,EAAED,KAAK,CAACE;wBACjCF,KAAK,CAACE,EAAE,IAAG,GACd,GAAAC,gBAAA,CACEH,KAAK,CAACI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}